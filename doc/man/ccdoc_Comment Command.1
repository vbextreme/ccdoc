.TH ccdoc_Comment Command 1
.SH Comment Command
ccdoc add some special command to write in C comment, in this mode you can control output.
.br
only comment start with /*- is readed
.br

.RE
.PP
.RS 1
.B file
.br
when start write documentation you need to create a file, each file.c, file.h, file.* can contains more file command with different filename.
.br
if you not write file command, other command are associated to last file selected.
.br
command file need an argument, 
.I file name
, in quote, separated or no with space.
.br
text after filename is a file description.
.br
examples:
.br
/*-file 'Test' description
.br
* descript ....
.br
*/
.br

.RE
.PP
.RS 1
.B sel
.br
if you want change current file associations you can use sel, for examples, you can create file on .h and other comment in other file.
.br
examples:
.br
.I file.h
.br
/*-file 'test' simple test */
.br
.I file.c
 
.br
/*-sel 'test' */ 
.br

.RE
.PP
.RS 1
.B visual
.br
each file need a visual, where display a page.
.br
visual accept 3 type:
.br
.B index
 the begin page, this file is used for create README and  used as prefix name of other man page
.br
.B side
  this page is display in sidebar on WIKI or HTML
.br
.B top
   this page is display in topbar on HTML and sidebar on WIKI
.br
examples:
.br
.br
/*-file 'test' simple test*/
.br
/*-visual index*/
.br

.RE
.PP
.RS 1
.B alias
.br
create alias name for each reference, accept two arguments.
.br
.I name of reference
, 
.I name of alias
.br
 examples:
.br
.br
/*-file 'test' simple test*/
.br
/*-visual index*/
.br
/*-alias 'test' 'simple test'*/
.br
now you can refer to test file with 'simple test'
.RE
.PP
.RS 1
.B str
.br
create a string, if you need to rewrite many time a string you can use this
.br
examples:
.br
.br
/*-file 'test' simple test*/
.br
/*-visual index*/
.br
/*-str 'hw' 'Hello, world!'*/
.br

.RE
.PP
.RS 1
.B Auto Doc
.br
the auto doc command is /*- without other command, in this mode ccdoc reading descript and parse C code for generate documentation.
.br
this mode is usefull when write documentation for macro, structure, function, etc.
.br
examples:
.br
.br
/*- simple void function*/
.br
void foo(void);
.br

.RE
.PP
.RS 1
.B Descript Command
.br
In addition on the basic command ccdoc export description command, description command is special command for writing best description.
.br
all descript command start with @, only new line you can write with \n.
.RE
.PP
.RS 2
.B Command Arguments
.br
if you writing cli command probably you want generate usage documentation, is very simple with 
.I command arguments
the format begin with @| and next usage can add with |
.br
@| 
.I short
 
.I long
 
.I required
 
.I descript
.br
| 
.I short
 
.I long
 
.I required
 
.I descript
.br
.B short
 is char for short format option
.br
.B long
 is long format option
.br
.B required
 1,0 display yes/no on required arguments
.br
.B descript
 a description of command.
.br
examples:
.br
/*-file 'test'
.br
* simple software
.br
* @| h 'help' 0 'display this'
.br
* | f 'file' 1 'select filename'
.br
*/
.br

.RE
.PP
.RS 2
.B Return
.br
The return command, @< , accept one quoted argument than descript return comment
.br
examples:
.br
/*- examples
.br
* @< '0 success, -1 on error'
.br
*/
.br
int test(void);
.br

.RE
.PP
.RS 2
.B Argument
.br
The argument command, @> , descript function or macro argument.
.br
Accept one number with no space refered to function argument and a description to argument quoted.
.br
The first argument is 0, it's write undocumented if one argument is not descript
.br
examples:
.br
/*- examples
.br
* @>0 'first arg'
.br
* @>1 'second arg'
.br
*/
.br
void foo(int bar, int cat);
.br

.RE
.PP
.RS 2
.B Reference
.br
Reference command, @* , add link or expand string.
.br
name of reference can be quoted, if have a space, or no.
.br
examples:
.br
/*-file 'my files' reference examples*/
.br
/*-visual index*/
.br
/*-str 'hello' 'hello world'*/
.br
/*- foo descript in @*'my files'
.br
* @< @*hello
.br
*/
.br
char* foo(void);
.br

.RE
.PP
.RS 2
.B Title
.br
Command title, @^ , add subtitle on current section.
.br
accept numbers witout space indicating importance, 1 very important 1+N little important, the title name is quoted string.
.br
examples:
.br
/*-file 'test'
.br
descript a file
.br
@^2 'subtitle'
.br
this is subsection
.br
*/
.br

.RE
.PP
.RS 2
.B Code
.br
Command code start with, @{ , and end with, @}, and mark comment as code.
.br
in the code the comment is not touch and only escape available is Escape Comment descript in Escape section.
.br
for now is not possible to write examples. code section cant escape command code, see main.c for code command examples
.RE
.PP
.RS 2
.B Link
.br
command link, @? , creating manual link, accept quoted visible name and quoted link.
.br
examples:
.br
/*-file 'test' create link @? 'localhost' 'http://127.0.0.1'*/
.br

.RE
.PP
.RS 2
.B Text Attribute
.br
in descript can add text attribute, text attribute is a command with quoted string separated or no with space.
.br
bold @b
.br
italic @i
.br
strike @s
.br
examples:
.br
/*-file 'test' @b'bold' @i 'italic' @s'strike'*/
.br

.RE
.PP
.RS 2
.B Escape
.br
for writing some special characters need to escape this.
.br
\ is used to escape\n for writing new line\@ for writing @@C writing /*, only this and @c works in code command, in this mode not get error on compiler.@c writing */